// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// ProductPriceHistoryService is an autogenerated mock type for the ProductPriceHistoryService type
type ProductPriceHistoryService struct {
	mock.Mock
}

type ProductPriceHistoryService_Expecter struct {
	mock *mock.Mock
}

func (_m *ProductPriceHistoryService) EXPECT() *ProductPriceHistoryService_Expecter {
	return &ProductPriceHistoryService_Expecter{mock: &_m.Mock}
}

// ImportFromCSVFile provides a mock function with given fields: ctx, reader
func (_m *ProductPriceHistoryService) ImportFromCSVFile(ctx context.Context, reader io.Reader) error {
	ret := _m.Called(ctx, reader)

	if len(ret) == 0 {
		panic("no return value specified for ImportFromCSVFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, io.Reader) error); ok {
		r0 = rf(ctx, reader)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProductPriceHistoryService_ImportFromCSVFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ImportFromCSVFile'
type ProductPriceHistoryService_ImportFromCSVFile_Call struct {
	*mock.Call
}

// ImportFromCSVFile is a helper method to define mock.On call
//   - ctx context.Context
//   - reader io.Reader
func (_e *ProductPriceHistoryService_Expecter) ImportFromCSVFile(ctx interface{}, reader interface{}) *ProductPriceHistoryService_ImportFromCSVFile_Call {
	return &ProductPriceHistoryService_ImportFromCSVFile_Call{Call: _e.mock.On("ImportFromCSVFile", ctx, reader)}
}

func (_c *ProductPriceHistoryService_ImportFromCSVFile_Call) Run(run func(ctx context.Context, reader io.Reader)) *ProductPriceHistoryService_ImportFromCSVFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(io.Reader))
	})
	return _c
}

func (_c *ProductPriceHistoryService_ImportFromCSVFile_Call) Return(_a0 error) *ProductPriceHistoryService_ImportFromCSVFile_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProductPriceHistoryService_ImportFromCSVFile_Call) RunAndReturn(run func(context.Context, io.Reader) error) *ProductPriceHistoryService_ImportFromCSVFile_Call {
	_c.Call.Return(run)
	return _c
}

// NewProductPriceHistoryService creates a new instance of ProductPriceHistoryService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProductPriceHistoryService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProductPriceHistoryService {
	mock := &ProductPriceHistoryService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
